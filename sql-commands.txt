Exercises: 


1. List the commands for adding, updating, and deleting data.

Answer: 

Add - insert into,

Update -alter table, update

Delete - delete, drop table 

2. Explain the structure for each type of command.

Answer: 

The input for each of the commands is as follows: 

Insert into - 

INSERT INTO (table_name) VALUES (values;

Alter table - 

ALTER TABLE (table_name) ADD COLUMN (column_name data_type) 
 
Update -

UPDATE (table_name) SET (value) WHERE id=(value);

Delete -

DELETE FROM (table_name) WHERE id=(); 

Drop table - 

DROP TABLE (table_name);


3. What are some of the data types that can be used in tables? Give a real-world example of each type.

* Memo - Memo is used for larger amounts of text. Stores up to 65,536 characters. Note: You cannot sort a memo field. However, they are searchable

* Double - Double precision floating-point. Will handle most decimals. Commonly used for monetary fields

* Use for currency. Holds up to 15 digits of whole dollars, plus 4 decimal places. Tip: You can choose which country's currency to use. Commonly used for monetary fields

* Ole Object- Can store pictures, audio, video, or other BLOBs (Binary Large OBjects)

4. Decide how to create a new table to hold a list of people invited to a wedding dinner. The table needs to have first and last names, whether they sent in their RSVP, the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).

* Which data type would you use to store each of the following pieces of information?
First and last name  -> VARCHAR(n)
Whether they sent in their RSVP -> VARCHAR(n)
Number of guests -> INTEGER(p)
Number of meals -> Float 

* Write a command that creates the table to track the wedding dinner.

CREATE TABLE dinner (
          LastName varchar(255),
          FirstName varchar(255),
        RSVP varchar(255),
        guestsExpected integer,
        Meals numeric(5, 2)
    );


* Write a command that adds a column to track whether the guest sent a thank you card.

ALTER TABLE dinner ADD COLUMN tnx_card_sent text;

* You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.

 ALTER TABLE dinner DROP COLUMN Meals;

* The guests will need a place to sit at the reception, so write a command that adds a column for table number.

 ALTER TABLE dinner ADD COLUMN table_number integer; 

* The wedding is over and we do not need to keep this information, so write a command that deletes the table numbers from the database.

DROP TABLE dinner;


5. Write a command to create a new table to hold the books in a library with the columns ISBN, title, author, genre, publishing date, number of copies, and available copies.

CREATE TABLE books (
    ISBN integer,
    title text,
    author text, 
    genre text, 
    pub_date date,  
    num_of_copies integer, 
    available_copies integer
);

* Find three books and add their information to the table. 


INSERT INTO books (ISBN, title, author, genre, pub_date, num_of_copies, available_copies) 
    VALUES
    (1259, 'Eloquent Ruby', 'Russell A. Olson', 'Fiction', 2018-03-08, 50, 4),
    (1593, 'JavaScript: The Good Parts', 'Douglas Crockford', 'Fantasy', 2016-02-10, 23, 3),
    (8982, 'Designing Object-Oriented Software', 'Rebecca Wirfs-Brock', 'Mystery', 2018-04-01,12 ,2),
    (7265, 'Practical Object-Oriented Design in Ruby', 'Sandi Metz','Romance', 2018-05-05,16, 0 );


* Someone has just checked out one of the books. Change the number of available copies to 1 fewer.

UPDATE books SET Available_copies=2 WHERE ISBN=1593;


* Now one of the books has been added to the banned books list. Remove it from the table.

DELETE FROM books WHERE ISBN=7265;

6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, country of origin, a brief description of the mission, orbiting body, if it is currently operating, and its approximate miles from Earth. In addition to the table creation, provide commands that perform the following operations:

CREATE TABLE spacecrafts(
    Id integer,
    Name text,
    Year_launched date,
    Country_origin text,
    Description text,
    Orbiting_body text,
    Currently_operating bit, 
    Distance_Earth decimal
);

* Add three non-Earth-orbiting satellites to the table.

INSERT INTO spacecrafts (Id, Name, Year_launched, Country_origin, Description, Orbiting_body, Currently_operating, Distance_Earth)
    VALUES
    (1, 'Roger',  20180308, 'Japan', 'Propeller' , 'Pluto' ,0, 8586956 ),
    (2, 'Alpha',  20160210, 'Sweden', 'Space_jet', 'Jupiter', 1, 589967),
    (3, 'Beta', 20180401, 'Spain', 'Speedliner', 'Mars',null, 59796 )

* Remove one of the satellites from the table since it has just crashed into the planet.

DELETE FROM spacecrafts WHERE Id=1;

* Edit another satellite because it is no longer operating and change the value to reflect that.

UPDATE spacecrafts SET Currently_operating=0 WHERE Id=2;

7. Write a command to create a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional recipients, the body of the email, the timestamp, whether or not you have read the email, and the id of the email chain it's in. Also provide commands that perform the following operations:

CREATE TABLE emails (
    Id integer,
    Subject_line varchar(500),
    Sender varchar(500),
    Additional_recipients varchar(500),
    Body varchar(500),
    Times_Stamp timestamp,
    Read_email longtext,
    ID_emailChain varchar(500)
);

* Add three new emails to the inbox.

INSERT INTO emails (Id, Subject_line, Sender, Additional_recipients, Body, Times_Stamp, Read_email, ID_emailChain)
    VALUES
    (1, 'Hi',  'Anna', 'Tim, John, Zane', 'Hi there! Just cehcking on you! ' , '20180521000101' ,'Yes', 'anna@yahoo.com' ),
    (2, 'Hello',  'Ben', 'Olga', 'Hello. Been a while, thought we should catch up', '20180521121001', 'No', 'ben@abc.com'),
    (3, 'Thanks', 'Tim' , 'Alexa', 'Thanks for last weekeend. we had a great time.','20180521090101', 'No' ,'tim@cali.com' )

* You deleted one of the emails, so write a command to remove the row from the inbox table.

DELETE FROM emails WHERE Sender='Tim';

* You started reading an email but just heard a crash in another room. Mark the email as unread before investigating the crash, so you can come back and read it later.

UPDATE emails SET Read_email='No' WHERE Sender='Anna';









